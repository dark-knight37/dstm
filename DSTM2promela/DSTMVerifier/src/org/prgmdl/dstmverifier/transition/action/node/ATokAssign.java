/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.action.node;

import org.prgmdl.dstmverifier.transition.action.analysis.*;

@SuppressWarnings("nls")
public final class ATokAssign extends PAssign
{
    private TAssigntok _assigntok_;

    public ATokAssign()
    {
        // Constructor
    }

    public ATokAssign(
        @SuppressWarnings("hiding") TAssigntok _assigntok_)
    {
        // Constructor
        setAssigntok(_assigntok_);

    }

    @Override
    public Object clone()
    {
        return new ATokAssign(
            cloneNode(this._assigntok_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATokAssign(this);
    }

    public TAssigntok getAssigntok()
    {
        return this._assigntok_;
    }

    public void setAssigntok(TAssigntok node)
    {
        if(this._assigntok_ != null)
        {
            this._assigntok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assigntok_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._assigntok_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._assigntok_ == child)
        {
            this._assigntok_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._assigntok_ == oldChild)
        {
            setAssigntok((TAssigntok) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
