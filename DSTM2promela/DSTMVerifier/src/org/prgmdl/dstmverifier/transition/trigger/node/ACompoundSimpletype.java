/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.trigger.node;

import org.prgmdl.dstmverifier.transition.trigger.analysis.*;

@SuppressWarnings("nls")
public final class ACompoundSimpletype extends PSimpletype
{
    private PCompoundName _compoundName_;

    public ACompoundSimpletype()
    {
        // Constructor
    }

    public ACompoundSimpletype(
        @SuppressWarnings("hiding") PCompoundName _compoundName_)
    {
        // Constructor
        setCompoundName(_compoundName_);

    }

    @Override
    public Object clone()
    {
        return new ACompoundSimpletype(
            cloneNode(this._compoundName_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompoundSimpletype(this);
    }

    public PCompoundName getCompoundName()
    {
        return this._compoundName_;
    }

    public void setCompoundName(PCompoundName node)
    {
        if(this._compoundName_ != null)
        {
            this._compoundName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compoundName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._compoundName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._compoundName_ == child)
        {
            this._compoundName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._compoundName_ == oldChild)
        {
            setCompoundName((PCompoundName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
