/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.data.node;

import org.prgmdl.dstmverifier.data.analysis.*;

@SuppressWarnings("nls")
public final class ACompoundSimpletype extends PSimpletype
{
    private PCompoundNameUse _compoundNameUse_;

    public ACompoundSimpletype()
    {
        // Constructor
    }

    public ACompoundSimpletype(
        @SuppressWarnings("hiding") PCompoundNameUse _compoundNameUse_)
    {
        // Constructor
        setCompoundNameUse(_compoundNameUse_);

    }

    @Override
    public Object clone()
    {
        return new ACompoundSimpletype(
            cloneNode(this._compoundNameUse_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompoundSimpletype(this);
    }

    public PCompoundNameUse getCompoundNameUse()
    {
        return this._compoundNameUse_;
    }

    public void setCompoundNameUse(PCompoundNameUse node)
    {
        if(this._compoundNameUse_ != null)
        {
            this._compoundNameUse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compoundNameUse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._compoundNameUse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._compoundNameUse_ == child)
        {
            this._compoundNameUse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._compoundNameUse_ == oldChild)
        {
            setCompoundNameUse((PCompoundNameUse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
