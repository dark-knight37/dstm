/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.data.node;

import org.prgmdl.dstmverifier.data.analysis.*;

@SuppressWarnings("nls")
public final class AMultiType extends PType
{
    private PMultitypeNameUse _multitypeNameUse_;

    public AMultiType()
    {
        // Constructor
    }

    public AMultiType(
        @SuppressWarnings("hiding") PMultitypeNameUse _multitypeNameUse_)
    {
        // Constructor
        setMultitypeNameUse(_multitypeNameUse_);

    }

    @Override
    public Object clone()
    {
        return new AMultiType(
            cloneNode(this._multitypeNameUse_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiType(this);
    }

    public PMultitypeNameUse getMultitypeNameUse()
    {
        return this._multitypeNameUse_;
    }

    public void setMultitypeNameUse(PMultitypeNameUse node)
    {
        if(this._multitypeNameUse_ != null)
        {
            this._multitypeNameUse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multitypeNameUse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multitypeNameUse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multitypeNameUse_ == child)
        {
            this._multitypeNameUse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multitypeNameUse_ == oldChild)
        {
            setMultitypeNameUse((PMultitypeNameUse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
