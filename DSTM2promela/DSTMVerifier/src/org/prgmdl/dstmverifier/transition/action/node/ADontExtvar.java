/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.action.node;

import org.prgmdl.dstmverifier.transition.action.analysis.*;

@SuppressWarnings("nls")
public final class ADontExtvar extends PExtvar
{
    private TDontcare _dontcare_;

    public ADontExtvar()
    {
        // Constructor
    }

    public ADontExtvar(
        @SuppressWarnings("hiding") TDontcare _dontcare_)
    {
        // Constructor
        setDontcare(_dontcare_);

    }

    @Override
    public Object clone()
    {
        return new ADontExtvar(
            cloneNode(this._dontcare_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADontExtvar(this);
    }

    public TDontcare getDontcare()
    {
        return this._dontcare_;
    }

    public void setDontcare(TDontcare node)
    {
        if(this._dontcare_ != null)
        {
            this._dontcare_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dontcare_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dontcare_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dontcare_ == child)
        {
            this._dontcare_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dontcare_ == oldChild)
        {
            setDontcare((TDontcare) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
