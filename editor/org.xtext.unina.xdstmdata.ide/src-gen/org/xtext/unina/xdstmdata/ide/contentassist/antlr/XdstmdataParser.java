/*
 * generated by Xtext 2.13.0
 */
package org.xtext.unina.xdstmdata.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.unina.xdstmdata.ide.contentassist.antlr.internal.InternalXdstmdataParser;
import org.xtext.unina.xdstmdata.services.XdstmdataGrammarAccess;

public class XdstmdataParser extends AbstractContentAssistParser {

	@Inject
	private XdstmdataGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXdstmdataParser createParser() {
		InternalXdstmdataParser result = new InternalXdstmdataParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTTypesAccess().getAlternatives_0(), "rule__TTypes__Alternatives_0");
					put(grammarAccess.getTTypesAccess().getAlternatives_1(), "rule__TTypes__Alternatives_1");
					put(grammarAccess.getSubtypeAccess().getAlternatives(), "rule__Subtype__Alternatives");
					put(grammarAccess.getChannel_specifierAccess().getAlternatives(), "rule__Channel_specifier__Alternatives");
					put(grammarAccess.getComposingtypeAccess().getAlternatives(), "rule__Composingtype__Alternatives");
					put(grammarAccess.getCIntchannelAccess().getAlternatives_7(), "rule__CIntchannel__Alternatives_7");
					put(grammarAccess.getCExtchannelAccess().getAlternatives_4(), "rule__CExtchannel__Alternatives_4");
					put(grammarAccess.getVVariableAccess().getAlternatives_0(), "rule__VVariable__Alternatives_0");
					put(grammarAccess.getTTypesAccess().getGroup(), "rule__TTypes__Group__0");
					put(grammarAccess.getTEnumAccess().getGroup(), "rule__TEnum__Group__0");
					put(grammarAccess.getTEnumAccess().getGroup_4(), "rule__TEnum__Group_4__0");
					put(grammarAccess.getTCompoundAccess().getGroup(), "rule__TCompound__Group__0");
					put(grammarAccess.getTCompoundAccess().getGroup_4(), "rule__TCompound__Group_4__0");
					put(grammarAccess.getChannel_specifierAccess().getGroup_0(), "rule__Channel_specifier__Group_0__0");
					put(grammarAccess.getTMultitypeAccess().getGroup(), "rule__TMultitype__Group__0");
					put(grammarAccess.getTMultitypeAccess().getGroup_4(), "rule__TMultitype__Group_4__0");
					put(grammarAccess.getCIntchannelAccess().getGroup(), "rule__CIntchannel__Group__0");
					put(grammarAccess.getCExtchannelAccess().getGroup(), "rule__CExtchannel__Group__0");
					put(grammarAccess.getVVariableAccess().getGroup(), "rule__VVariable__Group__0");
					put(grammarAccess.getTTypesAccess().getTEnumAssignment_0_0(), "rule__TTypes__TEnumAssignment_0_0");
					put(grammarAccess.getTTypesAccess().getTCompoundAssignment_0_1(), "rule__TTypes__TCompoundAssignment_0_1");
					put(grammarAccess.getTTypesAccess().getTMultitypeAssignment_0_2(), "rule__TTypes__TMultitypeAssignment_0_2");
					put(grammarAccess.getTTypesAccess().getCIntchannelAssignment_1_0(), "rule__TTypes__CIntchannelAssignment_1_0");
					put(grammarAccess.getTTypesAccess().getCExtchannelAssignment_1_1(), "rule__TTypes__CExtchannelAssignment_1_1");
					put(grammarAccess.getTTypesAccess().getVVariableAssignment_1_2(), "rule__TTypes__VVariableAssignment_1_2");
					put(grammarAccess.getTEnumAccess().getNameAssignment_1(), "rule__TEnum__NameAssignment_1");
					put(grammarAccess.getTEnumAccess().getLiteralsAssignment_3(), "rule__TEnum__LiteralsAssignment_3");
					put(grammarAccess.getTEnumAccess().getLiteralsAssignment_4_1(), "rule__TEnum__LiteralsAssignment_4_1");
					put(grammarAccess.getTCompoundAccess().getNameAssignment_1(), "rule__TCompound__NameAssignment_1");
					put(grammarAccess.getTCompoundAccess().getSubtypesAssignment_3(), "rule__TCompound__SubtypesAssignment_3");
					put(grammarAccess.getTCompoundAccess().getSubtypesAssignment_4_1(), "rule__TCompound__SubtypesAssignment_4_1");
					put(grammarAccess.getSubtypeAccess().getTStringAssignment_0(), "rule__Subtype__TStringAssignment_0");
					put(grammarAccess.getSubtypeAccess().getTStringAssignment_1(), "rule__Subtype__TStringAssignment_1");
					put(grammarAccess.getSubtypeAccess().getTChnAssignment_2(), "rule__Subtype__TChnAssignment_2");
					put(grammarAccess.getSubtypeAccess().getTIDAssignment_3(), "rule__Subtype__TIDAssignment_3");
					put(grammarAccess.getChannel_specifierAccess().getTypeAssignment_0_2(), "rule__Channel_specifier__TypeAssignment_0_2");
					put(grammarAccess.getTMultitypeAccess().getNameAssignment_1(), "rule__TMultitype__NameAssignment_1");
					put(grammarAccess.getTMultitypeAccess().getComposingtypesAssignment_3(), "rule__TMultitype__ComposingtypesAssignment_3");
					put(grammarAccess.getTMultitypeAccess().getComposingtypesAssignment_4_1(), "rule__TMultitype__ComposingtypesAssignment_4_1");
					put(grammarAccess.getComposingtypeAccess().getTStringAssignment_0(), "rule__Composingtype__TStringAssignment_0");
					put(grammarAccess.getComposingtypeAccess().getTStringAssignment_1(), "rule__Composingtype__TStringAssignment_1");
					put(grammarAccess.getComposingtypeAccess().getTChnAssignment_2(), "rule__Composingtype__TChnAssignment_2");
					put(grammarAccess.getComposingtypeAccess().getTIDAssignment_3(), "rule__Composingtype__TIDAssignment_3");
					put(grammarAccess.getCIntchannelAccess().getNameAssignment_2(), "rule__CIntchannel__NameAssignment_2");
					put(grammarAccess.getCIntchannelAccess().getBoundAssignment_4(), "rule__CIntchannel__BoundAssignment_4");
					put(grammarAccess.getCIntchannelAccess().getTStringAssignment_7_0(), "rule__CIntchannel__TStringAssignment_7_0");
					put(grammarAccess.getCIntchannelAccess().getTStringAssignment_7_1(), "rule__CIntchannel__TStringAssignment_7_1");
					put(grammarAccess.getCIntchannelAccess().getTChnAssignment_7_2(), "rule__CIntchannel__TChnAssignment_7_2");
					put(grammarAccess.getCIntchannelAccess().getTIDAssignment_7_3(), "rule__CIntchannel__TIDAssignment_7_3");
					put(grammarAccess.getCExtchannelAccess().getNameAssignment_2(), "rule__CExtchannel__NameAssignment_2");
					put(grammarAccess.getCExtchannelAccess().getTStringAssignment_4_0(), "rule__CExtchannel__TStringAssignment_4_0");
					put(grammarAccess.getCExtchannelAccess().getTStringAssignment_4_1(), "rule__CExtchannel__TStringAssignment_4_1");
					put(grammarAccess.getCExtchannelAccess().getTChnAssignment_4_2(), "rule__CExtchannel__TChnAssignment_4_2");
					put(grammarAccess.getCExtchannelAccess().getTIDAssignment_4_3(), "rule__CExtchannel__TIDAssignment_4_3");
					put(grammarAccess.getVVariableAccess().getTStringAssignment_0_0(), "rule__VVariable__TStringAssignment_0_0");
					put(grammarAccess.getVVariableAccess().getTStringAssignment_0_1(), "rule__VVariable__TStringAssignment_0_1");
					put(grammarAccess.getVVariableAccess().getTChnAssignment_0_2(), "rule__VVariable__TChnAssignment_0_2");
					put(grammarAccess.getVVariableAccess().getTIDAssignment_0_3(), "rule__VVariable__TIDAssignment_0_3");
					put(grammarAccess.getVVariableAccess().getNameAssignment_1(), "rule__VVariable__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XdstmdataGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XdstmdataGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
