/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.condition.node;

import org.prgmdl.dstmverifier.transition.condition.analysis.*;

@SuppressWarnings("nls")
public final class ADcareExpr extends PExpr
{
    private TDcsymb _dcsymb_;

    public ADcareExpr()
    {
        // Constructor
    }

    public ADcareExpr(
        @SuppressWarnings("hiding") TDcsymb _dcsymb_)
    {
        // Constructor
        setDcsymb(_dcsymb_);

    }

    @Override
    public Object clone()
    {
        return new ADcareExpr(
            cloneNode(this._dcsymb_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADcareExpr(this);
    }

    public TDcsymb getDcsymb()
    {
        return this._dcsymb_;
    }

    public void setDcsymb(TDcsymb node)
    {
        if(this._dcsymb_ != null)
        {
            this._dcsymb_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dcsymb_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dcsymb_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dcsymb_ == child)
        {
            this._dcsymb_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dcsymb_ == oldChild)
        {
            setDcsymb((TDcsymb) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
