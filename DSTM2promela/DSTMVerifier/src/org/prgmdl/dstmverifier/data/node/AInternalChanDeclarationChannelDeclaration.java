/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.data.node;

import org.prgmdl.dstmverifier.data.analysis.*;

@SuppressWarnings("nls")
public final class AInternalChanDeclarationChannelDeclaration extends PChannelDeclaration
{
    private TChan _chan_;
    private TInternal _internal_;
    private PChanName _chanName_;
    private TLBkt _lBkt_;
    private TNumbers _numbers_;
    private TRBkt _rBkt_;
    private TOf _of_;
    private PType _type_;

    public AInternalChanDeclarationChannelDeclaration()
    {
        // Constructor
    }

    public AInternalChanDeclarationChannelDeclaration(
        @SuppressWarnings("hiding") TChan _chan_,
        @SuppressWarnings("hiding") TInternal _internal_,
        @SuppressWarnings("hiding") PChanName _chanName_,
        @SuppressWarnings("hiding") TLBkt _lBkt_,
        @SuppressWarnings("hiding") TNumbers _numbers_,
        @SuppressWarnings("hiding") TRBkt _rBkt_,
        @SuppressWarnings("hiding") TOf _of_,
        @SuppressWarnings("hiding") PType _type_)
    {
        // Constructor
        setChan(_chan_);

        setInternal(_internal_);

        setChanName(_chanName_);

        setLBkt(_lBkt_);

        setNumbers(_numbers_);

        setRBkt(_rBkt_);

        setOf(_of_);

        setType(_type_);

    }

    @Override
    public Object clone()
    {
        return new AInternalChanDeclarationChannelDeclaration(
            cloneNode(this._chan_),
            cloneNode(this._internal_),
            cloneNode(this._chanName_),
            cloneNode(this._lBkt_),
            cloneNode(this._numbers_),
            cloneNode(this._rBkt_),
            cloneNode(this._of_),
            cloneNode(this._type_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInternalChanDeclarationChannelDeclaration(this);
    }

    public TChan getChan()
    {
        return this._chan_;
    }

    public void setChan(TChan node)
    {
        if(this._chan_ != null)
        {
            this._chan_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._chan_ = node;
    }

    public TInternal getInternal()
    {
        return this._internal_;
    }

    public void setInternal(TInternal node)
    {
        if(this._internal_ != null)
        {
            this._internal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._internal_ = node;
    }

    public PChanName getChanName()
    {
        return this._chanName_;
    }

    public void setChanName(PChanName node)
    {
        if(this._chanName_ != null)
        {
            this._chanName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._chanName_ = node;
    }

    public TLBkt getLBkt()
    {
        return this._lBkt_;
    }

    public void setLBkt(TLBkt node)
    {
        if(this._lBkt_ != null)
        {
            this._lBkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBkt_ = node;
    }

    public TNumbers getNumbers()
    {
        return this._numbers_;
    }

    public void setNumbers(TNumbers node)
    {
        if(this._numbers_ != null)
        {
            this._numbers_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numbers_ = node;
    }

    public TRBkt getRBkt()
    {
        return this._rBkt_;
    }

    public void setRBkt(TRBkt node)
    {
        if(this._rBkt_ != null)
        {
            this._rBkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBkt_ = node;
    }

    public TOf getOf()
    {
        return this._of_;
    }

    public void setOf(TOf node)
    {
        if(this._of_ != null)
        {
            this._of_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._of_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._chan_)
            + toString(this._internal_)
            + toString(this._chanName_)
            + toString(this._lBkt_)
            + toString(this._numbers_)
            + toString(this._rBkt_)
            + toString(this._of_)
            + toString(this._type_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._chan_ == child)
        {
            this._chan_ = null;
            return;
        }

        if(this._internal_ == child)
        {
            this._internal_ = null;
            return;
        }

        if(this._chanName_ == child)
        {
            this._chanName_ = null;
            return;
        }

        if(this._lBkt_ == child)
        {
            this._lBkt_ = null;
            return;
        }

        if(this._numbers_ == child)
        {
            this._numbers_ = null;
            return;
        }

        if(this._rBkt_ == child)
        {
            this._rBkt_ = null;
            return;
        }

        if(this._of_ == child)
        {
            this._of_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._chan_ == oldChild)
        {
            setChan((TChan) newChild);
            return;
        }

        if(this._internal_ == oldChild)
        {
            setInternal((TInternal) newChild);
            return;
        }

        if(this._chanName_ == oldChild)
        {
            setChanName((PChanName) newChild);
            return;
        }

        if(this._lBkt_ == oldChild)
        {
            setLBkt((TLBkt) newChild);
            return;
        }

        if(this._numbers_ == oldChild)
        {
            setNumbers((TNumbers) newChild);
            return;
        }

        if(this._rBkt_ == oldChild)
        {
            setRBkt((TRBkt) newChild);
            return;
        }

        if(this._of_ == oldChild)
        {
            setOf((TOf) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
