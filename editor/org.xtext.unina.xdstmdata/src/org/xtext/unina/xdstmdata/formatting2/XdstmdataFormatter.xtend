/*
 * generated by Xtext 2.13.0
 */
package org.xtext.unina.xdstmdata.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.unina.xdstmdata.services.XdstmdataGrammarAccess
//import org.xtext.unina.xdstmdata.xDstmdata.tBasic
import org.xtext.unina.xdstmdata.xDstmdata.tCompound
import org.xtext.unina.xdstmdata.xDstmdata.tMultitype
//import org.xtext.unina.xdstmdata.xDstmdata.tSimpleType

class XdstmdataFormatter extends AbstractFormatter2 {
	
	@Inject extension XdstmdataGrammarAccess

	def dispatch void format(tCompound tCompound, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (tBasic tBasic : tCompound.getSubtypes()) {
//			tBasic.format;
//		}
	}

	def dispatch void format(tMultitype tMultitype, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (tSimpleType tSimpleType : tMultiType.getComposedBy()) {
//			tSimpleType.format;
//		}
	}
	
	// TODO: implement for 
}
