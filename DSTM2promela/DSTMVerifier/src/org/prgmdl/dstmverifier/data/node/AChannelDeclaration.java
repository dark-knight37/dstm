/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.data.node;

import org.prgmdl.dstmverifier.data.analysis.*;

@SuppressWarnings("nls")
public final class AChannelDeclaration extends PDeclaration
{
    private PChannelDeclaration _channelDeclaration_;
    private TSemi _semi_;

    public AChannelDeclaration()
    {
        // Constructor
    }

    public AChannelDeclaration(
        @SuppressWarnings("hiding") PChannelDeclaration _channelDeclaration_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setChannelDeclaration(_channelDeclaration_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new AChannelDeclaration(
            cloneNode(this._channelDeclaration_),
            cloneNode(this._semi_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAChannelDeclaration(this);
    }

    public PChannelDeclaration getChannelDeclaration()
    {
        return this._channelDeclaration_;
    }

    public void setChannelDeclaration(PChannelDeclaration node)
    {
        if(this._channelDeclaration_ != null)
        {
            this._channelDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._channelDeclaration_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._channelDeclaration_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._channelDeclaration_ == child)
        {
            this._channelDeclaration_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._channelDeclaration_ == oldChild)
        {
            setChannelDeclaration((PChannelDeclaration) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
