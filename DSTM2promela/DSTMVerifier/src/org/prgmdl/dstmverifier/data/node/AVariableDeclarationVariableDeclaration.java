/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.data.node;

import org.prgmdl.dstmverifier.data.analysis.*;

@SuppressWarnings("nls")
public final class AVariableDeclarationVariableDeclaration extends PVariableDeclaration
{
    private PVarType _varType_;
    private PVarName _varName_;

    public AVariableDeclarationVariableDeclaration()
    {
        // Constructor
    }

    public AVariableDeclarationVariableDeclaration(
        @SuppressWarnings("hiding") PVarType _varType_,
        @SuppressWarnings("hiding") PVarName _varName_)
    {
        // Constructor
        setVarType(_varType_);

        setVarName(_varName_);

    }

    @Override
    public Object clone()
    {
        return new AVariableDeclarationVariableDeclaration(
            cloneNode(this._varType_),
            cloneNode(this._varName_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariableDeclarationVariableDeclaration(this);
    }

    public PVarType getVarType()
    {
        return this._varType_;
    }

    public void setVarType(PVarType node)
    {
        if(this._varType_ != null)
        {
            this._varType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varType_ = node;
    }

    public PVarName getVarName()
    {
        return this._varName_;
    }

    public void setVarName(PVarName node)
    {
        if(this._varName_ != null)
        {
            this._varName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._varType_)
            + toString(this._varName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._varType_ == child)
        {
            this._varType_ = null;
            return;
        }

        if(this._varName_ == child)
        {
            this._varName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._varType_ == oldChild)
        {
            setVarType((PVarType) newChild);
            return;
        }

        if(this._varName_ == oldChild)
        {
            setVarName((PVarName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
