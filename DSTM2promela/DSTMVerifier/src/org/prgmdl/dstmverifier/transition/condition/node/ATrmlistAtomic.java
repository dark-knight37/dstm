/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.condition.node;

import org.prgmdl.dstmverifier.transition.condition.analysis.*;

@SuppressWarnings("nls")
public final class ATrmlistAtomic extends PAtomic
{
    private PChname _chname_;
    private TLBkt _lBkt_;
    private TQmark _qmark_;
    private TLt _lt_;
    private PTrmlist _trmlist_;
    private TGt _gt_;
    private TRBkt _rBkt_;

    public ATrmlistAtomic()
    {
        // Constructor
    }

    public ATrmlistAtomic(
        @SuppressWarnings("hiding") PChname _chname_,
        @SuppressWarnings("hiding") TLBkt _lBkt_,
        @SuppressWarnings("hiding") TQmark _qmark_,
        @SuppressWarnings("hiding") TLt _lt_,
        @SuppressWarnings("hiding") PTrmlist _trmlist_,
        @SuppressWarnings("hiding") TGt _gt_,
        @SuppressWarnings("hiding") TRBkt _rBkt_)
    {
        // Constructor
        setChname(_chname_);

        setLBkt(_lBkt_);

        setQmark(_qmark_);

        setLt(_lt_);

        setTrmlist(_trmlist_);

        setGt(_gt_);

        setRBkt(_rBkt_);

    }

    @Override
    public Object clone()
    {
        return new ATrmlistAtomic(
            cloneNode(this._chname_),
            cloneNode(this._lBkt_),
            cloneNode(this._qmark_),
            cloneNode(this._lt_),
            cloneNode(this._trmlist_),
            cloneNode(this._gt_),
            cloneNode(this._rBkt_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATrmlistAtomic(this);
    }

    public PChname getChname()
    {
        return this._chname_;
    }

    public void setChname(PChname node)
    {
        if(this._chname_ != null)
        {
            this._chname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._chname_ = node;
    }

    public TLBkt getLBkt()
    {
        return this._lBkt_;
    }

    public void setLBkt(TLBkt node)
    {
        if(this._lBkt_ != null)
        {
            this._lBkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBkt_ = node;
    }

    public TQmark getQmark()
    {
        return this._qmark_;
    }

    public void setQmark(TQmark node)
    {
        if(this._qmark_ != null)
        {
            this._qmark_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._qmark_ = node;
    }

    public TLt getLt()
    {
        return this._lt_;
    }

    public void setLt(TLt node)
    {
        if(this._lt_ != null)
        {
            this._lt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lt_ = node;
    }

    public PTrmlist getTrmlist()
    {
        return this._trmlist_;
    }

    public void setTrmlist(PTrmlist node)
    {
        if(this._trmlist_ != null)
        {
            this._trmlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._trmlist_ = node;
    }

    public TGt getGt()
    {
        return this._gt_;
    }

    public void setGt(TGt node)
    {
        if(this._gt_ != null)
        {
            this._gt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._gt_ = node;
    }

    public TRBkt getRBkt()
    {
        return this._rBkt_;
    }

    public void setRBkt(TRBkt node)
    {
        if(this._rBkt_ != null)
        {
            this._rBkt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBkt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._chname_)
            + toString(this._lBkt_)
            + toString(this._qmark_)
            + toString(this._lt_)
            + toString(this._trmlist_)
            + toString(this._gt_)
            + toString(this._rBkt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._chname_ == child)
        {
            this._chname_ = null;
            return;
        }

        if(this._lBkt_ == child)
        {
            this._lBkt_ = null;
            return;
        }

        if(this._qmark_ == child)
        {
            this._qmark_ = null;
            return;
        }

        if(this._lt_ == child)
        {
            this._lt_ = null;
            return;
        }

        if(this._trmlist_ == child)
        {
            this._trmlist_ = null;
            return;
        }

        if(this._gt_ == child)
        {
            this._gt_ = null;
            return;
        }

        if(this._rBkt_ == child)
        {
            this._rBkt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._chname_ == oldChild)
        {
            setChname((PChname) newChild);
            return;
        }

        if(this._lBkt_ == oldChild)
        {
            setLBkt((TLBkt) newChild);
            return;
        }

        if(this._qmark_ == oldChild)
        {
            setQmark((TQmark) newChild);
            return;
        }

        if(this._lt_ == oldChild)
        {
            setLt((TLt) newChild);
            return;
        }

        if(this._trmlist_ == oldChild)
        {
            setTrmlist((PTrmlist) newChild);
            return;
        }

        if(this._gt_ == oldChild)
        {
            setGt((TGt) newChild);
            return;
        }

        if(this._rBkt_ == oldChild)
        {
            setRBkt((TRBkt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
