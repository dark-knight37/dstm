/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.dstmverifier.transition.parameter.node;

import org.prgmdl.dstmverifier.transition.parameter.analysis.*;

@SuppressWarnings("nls")
public final class AOrLbop extends PLbop
{
    private TBarBar _barBar_;

    public AOrLbop()
    {
        // Constructor
    }

    public AOrLbop(
        @SuppressWarnings("hiding") TBarBar _barBar_)
    {
        // Constructor
        setBarBar(_barBar_);

    }

    @Override
    public Object clone()
    {
        return new AOrLbop(
            cloneNode(this._barBar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrLbop(this);
    }

    public TBarBar getBarBar()
    {
        return this._barBar_;
    }

    public void setBarBar(TBarBar node)
    {
        if(this._barBar_ != null)
        {
            this._barBar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._barBar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._barBar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._barBar_ == child)
        {
            this._barBar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._barBar_ == oldChild)
        {
            setBarBar((TBarBar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
