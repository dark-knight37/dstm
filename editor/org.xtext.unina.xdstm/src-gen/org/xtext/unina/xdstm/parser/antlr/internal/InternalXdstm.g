/*
 * generated by Xtext 2.13.0
 */
grammar InternalXdstm;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.unina.xdstm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.unina.xdstm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.unina.xdstm.services.XdstmGrammarAccess;

}

@parser::members {

 	private XdstmGrammarAccess grammarAccess;

    public InternalXdstmParser(TokenStream input, XdstmGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected XdstmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getIncludeIncludeParserRuleCall_0_0());
				}
				lv_include_0_0=ruleinclude
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"include",
						lv_include_0_0,
						"org.xtext.unina.xdstm.Xdstm.include");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMachinesMachineParserRuleCall_1_0());
				}
				lv_machines_1_0=ruleMachine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"machines",
						lv_machines_1_0,
						"org.xtext.unina.xdstm.Xdstm.Machine");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMachinesMachineParserRuleCall_2_0());
				}
				lv_machines_2_0=ruleMachine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"machines",
						lv_machines_2_0,
						"org.xtext.unina.xdstm.Xdstm.Machine");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDstmDSTMParserRuleCall_3_0());
				}
				lv_dstm_3_0=ruleDSTM
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"dstm",
						lv_dstm_3_0,
						"org.xtext.unina.xdstm.Xdstm.DSTM");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleinclude
entryRuleinclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	iv_ruleinclude=ruleinclude
	{ $current=$iv_ruleinclude.current; }
	EOF;

// Rule include
ruleinclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getIncludeAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIncludeRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getIncludeAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSTM
entryRuleDSTM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSTMRule()); }
	iv_ruleDSTM=ruleDSTM
	{ $current=$iv_ruleDSTM.current; }
	EOF;

// Rule DSTM
ruleDSTM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DSTM'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSTMAccess().getDSTMKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSTMAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSTMRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSTMAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='machines'
		{
			newLeafNode(otherlv_3, grammarAccess.getDSTMAccess().getMachinesKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getDSTMAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSTMRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getDSTMAccess().getMachinesMachineCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getDSTMAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSTMRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getDSTMAccess().getMachinesMachineCrossReference_6_1_0());
					}
				)
			)
		)*
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDSTMAccess().getSemicolonKeyword_7());
		}
		otherlv_9='main'
		{
			newLeafNode(otherlv_9, grammarAccess.getDSTMAccess().getMainKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSTMRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getDSTMAccess().getMainMachineCrossReference_9_0());
				}
			)
		)
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getDSTMAccess().getSemicolonKeyword_10());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getDSTMAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getDSTMAccess().getSemicolonKeyword_12());
		}
	)
;

// Entry rule entryRuleMachine
entryRuleMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMachineRule()); }
	iv_ruleMachine=ruleMachine
	{ $current=$iv_ruleMachine.current; }
	EOF;

// Rule Machine
ruleMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Machine'
		{
			newLeafNode(otherlv_0, grammarAccess.getMachineAccess().getMachineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMachineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='vertexes'
		{
			newLeafNode(otherlv_3, grammarAccess.getMachineAccess().getVertexesKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMachineAccess().getVertexesVertexParserRuleCall_5_0());
				}
				lv_vertexes_5_0=ruleVertex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMachineRule());
					}
					add(
						$current,
						"vertexes",
						lv_vertexes_5_0,
						"org.xtext.unina.xdstm.Xdstm.Vertex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getMachineAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getVertexesVertexParserRuleCall_6_1_0());
					}
					lv_vertexes_7_0=ruleVertex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"vertexes",
							lv_vertexes_7_0,
							"org.xtext.unina.xdstm.Xdstm.Vertex");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='transitions'
		{
			newLeafNode(otherlv_9, grammarAccess.getMachineAccess().getTransitionsKeyword_8());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMachineAccess().getTransitionsTransitionParserRuleCall_10_0());
				}
				lv_transitions_11_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMachineRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_11_0,
						"org.xtext.unina.xdstm.Xdstm.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getMachineAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getTransitionsTransitionParserRuleCall_11_1_0());
					}
					lv_transitions_13_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"transitions",
							lv_transitions_13_0,
							"org.xtext.unina.xdstm.Xdstm.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_12());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getMachineAccess().getSemicolonKeyword_14());
		}
	)
;

// Entry rule entryRuleVertex
entryRuleVertex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVertexRule()); }
	iv_ruleVertex=ruleVertex
	{ $current=$iv_ruleVertex.current; }
	EOF;

// Rule Vertex
ruleVertex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVertexAccess().getNodeParserRuleCall_0());
		}
		this_Node_0=ruleNode
		{
			$current = $this_Node_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVertexAccess().getBoxParserRuleCall_1());
		}
		this_Box_1=ruleBox
		{
			$current = $this_Box_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVertexAccess().getEnteringNodeAbsParserRuleCall_2());
		}
		this_EnteringNodeAbs_2=ruleEnteringNodeAbs
		{
			$current = $this_EnteringNodeAbs_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVertexAccess().getExitingNodeParserRuleCall_3());
		}
		this_ExitingNode_3=ruleExitingNode
		{
			$current = $this_ExitingNode_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVertexAccess().getForkParserRuleCall_4());
		}
		this_Fork_4=ruleFork
		{
			$current = $this_Fork_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVertexAccess().getJoinParserRuleCall_5());
		}
		this_Join_5=ruleJoin
		{
			$current = $this_Join_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnteringNodeAbs
entryRuleEnteringNodeAbs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnteringNodeAbsRule()); }
	iv_ruleEnteringNodeAbs=ruleEnteringNodeAbs
	{ $current=$iv_ruleEnteringNodeAbs.current; }
	EOF;

// Rule EnteringNodeAbs
ruleEnteringNodeAbs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEnteringNodeAbsAccess().getEnteringNodeParserRuleCall_0());
		}
		this_EnteringNode_0=ruleEnteringNode
		{
			$current = $this_EnteringNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEnteringNodeAbsAccess().getInitialNodeParserRuleCall_1());
		}
		this_InitialNode_1=ruleInitialNode
		{
			$current = $this_InitialNode_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	iv_ruleBox=ruleBox
	{ $current=$iv_ruleBox.current; }
	EOF;

// Rule Box
ruleBox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Box'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoxAccess().getBoxKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBoxAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoxRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoxAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoxRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='instantiation'
		{
			newLeafNode(otherlv_4, grammarAccess.getBoxAccess().getInstantiationKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getBoxAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoxRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getBoxAccess().getInstantiationMachineCrossReference_6_0());
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getBoxAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoxRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getBoxAccess().getInstantiationMachineCrossReference_7_1_0());
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getBoxAccess().getRightParenthesisKeyword_8());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEnteringNode
entryRuleEnteringNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnteringNodeRule()); }
	iv_ruleEnteringNode=ruleEnteringNode
	{ $current=$iv_ruleEnteringNode.current; }
	EOF;

// Rule EnteringNode
ruleEnteringNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnteringNode'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnteringNodeAccess().getEnteringNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnteringNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnteringNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnteringNodeAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnteringNodeRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitialNode
entryRuleInitialNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialNodeRule()); }
	iv_ruleInitialNode=ruleInitialNode
	{ $current=$iv_ruleInitialNode.current; }
	EOF;

// Rule InitialNode
ruleInitialNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InitialNode'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialNodeAccess().getInitialNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInitialNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialNodeAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialNodeRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExitingNode
entryRuleExitingNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExitingNodeRule()); }
	iv_ruleExitingNode=ruleExitingNode
	{ $current=$iv_ruleExitingNode.current; }
	EOF;

// Rule ExitingNode
ruleExitingNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExitingNode'
		{
			newLeafNode(otherlv_0, grammarAccess.getExitingNodeAccess().getExitingNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExitingNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExitingNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExitingNodeAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExitingNodeRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFork
entryRuleFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForkRule()); }
	iv_ruleFork=ruleFork
	{ $current=$iv_ruleFork.current; }
	EOF;

// Rule Fork
ruleFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fork'
		{
			newLeafNode(otherlv_0, grammarAccess.getForkAccess().getForkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getForkAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForkAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForkRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJoin
entryRuleJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinRule()); }
	iv_ruleJoin=ruleJoin
	{ $current=$iv_ruleJoin.current; }
	EOF;

// Rule Join
ruleJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Join'
		{
			newLeafNode(otherlv_0, grammarAccess.getJoinAccess().getJoinKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJoinAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getRequirementsRequirementsParserRuleCall_2_0());
				}
				lv_requirements_2_0=ruleRequirements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"requirements",
						lv_requirements_2_0,
						"org.xtext.unina.xdstm.Xdstm.Requirements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='source'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getSourceKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getSourceSourceCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getCommaKeyword_6_0());
			}
			otherlv_7='exiting_node'
			{
				newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getExiting_nodeKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getExiting_nodeExitingNodeCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getCommaKeyword_7());
		}
		otherlv_10='destination'
		{
			newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDestinationKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getTransitionAccess().getDestinationDestinationCrossReference_9_0());
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getCommaKeyword_10_0());
			}
			otherlv_13='entering_node'
			{
				newLeafNode(otherlv_13, grammarAccess.getTransitionAccess().getEntering_nodeKeyword_10_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getEntering_nodeEnteringNodeAbsCrossReference_10_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getCommaKeyword_11_0());
			}
			(
				(
					lv_is_preemptive_16_0='isPreemptive'
					{
						newLeafNode(lv_is_preemptive_16_0, grammarAccess.getTransitionAccess().getIs_preemptiveIsPreemptiveKeyword_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed($current, "is_preemptive", true, "isPreemptive");
					}
				)
			)
		)?
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getTransitionAccess().getCommaKeyword_12_0());
			}
			otherlv_18='trigger'
			{
				newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getTriggerKeyword_12_1());
			}
			(
				(
					lv_trigger_19_0=RULE_STRING
					{
						newLeafNode(lv_trigger_19_0, grammarAccess.getTransitionAccess().getTriggerSTRINGTerminalRuleCall_12_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"trigger",
							lv_trigger_19_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getTransitionAccess().getCommaKeyword_13_0());
			}
			otherlv_21='condition'
			{
				newLeafNode(otherlv_21, grammarAccess.getTransitionAccess().getConditionKeyword_13_1());
			}
			(
				(
					lv_condition_22_0=RULE_STRING
					{
						newLeafNode(lv_condition_22_0, grammarAccess.getTransitionAccess().getConditionSTRINGTerminalRuleCall_13_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"condition",
							lv_condition_22_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_23=','
			{
				newLeafNode(otherlv_23, grammarAccess.getTransitionAccess().getCommaKeyword_14_0());
			}
			otherlv_24='actions'
			{
				newLeafNode(otherlv_24, grammarAccess.getTransitionAccess().getActionsKeyword_14_1());
			}
			otherlv_25='{'
			{
				newLeafNode(otherlv_25, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_14_2());
			}
			(
				(
					lv_actions_26_0=RULE_STRING
					{
						newLeafNode(lv_actions_26_0, grammarAccess.getTransitionAccess().getActionsSTRINGTerminalRuleCall_14_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						addWithLastConsumed(
							$current,
							"actions",
							lv_actions_26_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_27=','
				{
					newLeafNode(otherlv_27, grammarAccess.getTransitionAccess().getCommaKeyword_14_4_0());
				}
				(
					(
						lv_actions_28_0=RULE_STRING
						{
							newLeafNode(lv_actions_28_0, grammarAccess.getTransitionAccess().getActionsSTRINGTerminalRuleCall_14_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTransitionRule());
							}
							addWithLastConsumed(
								$current,
								"actions",
								lv_actions_28_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_29='}'
			{
				newLeafNode(otherlv_29, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_14_5());
			}
		)?
		(
			otherlv_30=','
			{
				newLeafNode(otherlv_30, grammarAccess.getTransitionAccess().getCommaKeyword_15_0());
			}
			otherlv_31='par_instantiation'
			{
				newLeafNode(otherlv_31, grammarAccess.getTransitionAccess().getPar_instantiationKeyword_15_1());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_15_2());
			}
			(
				(
					lv_par_instantiation_33_0=RULE_STRING
					{
						newLeafNode(lv_par_instantiation_33_0, grammarAccess.getTransitionAccess().getPar_instantiationSTRINGTerminalRuleCall_15_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						addWithLastConsumed(
							$current,
							"par_instantiation",
							lv_par_instantiation_33_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getTransitionAccess().getCommaKeyword_15_4_0());
				}
				(
					(
						lv_par_instantiation_35_0=RULE_STRING
						{
							newLeafNode(lv_par_instantiation_35_0, grammarAccess.getTransitionAccess().getPar_instantiationSTRINGTerminalRuleCall_15_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTransitionRule());
							}
							addWithLastConsumed(
								$current,
								"par_instantiation",
								lv_par_instantiation_35_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_15_5());
			}
		)?
		otherlv_37='}'
		{
			newLeafNode(otherlv_37, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_16());
		}
	)
;

// Entry rule entryRuleRequirements
entryRuleRequirements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementsRule()); }
	iv_ruleRequirements=ruleRequirements
	{ $current=$iv_ruleRequirements.current; }
	EOF;

// Rule Requirements
ruleRequirements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequirementsAccess().getRequirementsAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getRequirementsAccess().getLeftParenthesisKeyword_1_0());
			}
			otherlv_2='requirements'
			{
				newLeafNode(otherlv_2, grammarAccess.getRequirementsAccess().getRequirementsKeyword_1_1());
			}
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getRequirementsAccess().getEqualsSignKeyword_1_2());
			}
			(
				(
					lv_requirements_4_0=RULE_STRING
					{
						newLeafNode(lv_requirements_4_0, grammarAccess.getRequirementsAccess().getRequirementsSTRINGTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementsRule());
						}
						addWithLastConsumed(
							$current,
							"requirements",
							lv_requirements_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getRequirementsAccess().getCommaKeyword_1_4_0());
				}
				(
					(
						lv_requirements_6_0=RULE_STRING
						{
							newLeafNode(lv_requirements_6_0, grammarAccess.getRequirementsAccess().getRequirementsSTRINGTerminalRuleCall_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRequirementsRule());
							}
							addWithLastConsumed(
								$current,
								"requirements",
								lv_requirements_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getRequirementsAccess().getRightParenthesisKeyword_1_5());
			}
		)?
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
