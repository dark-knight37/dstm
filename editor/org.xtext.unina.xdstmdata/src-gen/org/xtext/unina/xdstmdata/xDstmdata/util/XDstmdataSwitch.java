/**
 * generated by Xtext 2.13.0
 */
package org.xtext.unina.xdstmdata.xDstmdata.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.unina.xdstmdata.xDstmdata.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.unina.xdstmdata.xDstmdata.XDstmdataPackage
 * @generated
 */
public class XDstmdataSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static XDstmdataPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XDstmdataSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = XDstmdataPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case XDstmdataPackage.TTYPES:
      {
        tTypes tTypes = (tTypes)theEObject;
        T result = casetTypes(tTypes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.TENUM:
      {
        tEnum tEnum = (tEnum)theEObject;
        T result = casetEnum(tEnum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.TCOMPOUND:
      {
        tCompound tCompound = (tCompound)theEObject;
        T result = casetCompound(tCompound);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.SUBTYPE:
      {
        subtype subtype = (subtype)theEObject;
        T result = casesubtype(subtype);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.CHANNEL_SPECIFIER:
      {
        channel_specifier channel_specifier = (channel_specifier)theEObject;
        T result = casechannel_specifier(channel_specifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.TMULTITYPE:
      {
        tMultitype tMultitype = (tMultitype)theEObject;
        T result = casetMultitype(tMultitype);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.COMPOSINGTYPE:
      {
        composingtype composingtype = (composingtype)theEObject;
        T result = casecomposingtype(composingtype);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.CINTCHANNEL:
      {
        cIntchannel cIntchannel = (cIntchannel)theEObject;
        T result = casecIntchannel(cIntchannel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.CEXTCHANNEL:
      {
        cExtchannel cExtchannel = (cExtchannel)theEObject;
        T result = casecExtchannel(cExtchannel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XDstmdataPackage.VVARIABLE:
      {
        vVariable vVariable = (vVariable)theEObject;
        T result = casevVariable(vVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>tTypes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>tTypes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetTypes(tTypes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>tEnum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>tEnum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetEnum(tEnum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>tCompound</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>tCompound</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetCompound(tCompound object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>subtype</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>subtype</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casesubtype(subtype object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>channel specifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>channel specifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casechannel_specifier(channel_specifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>tMultitype</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>tMultitype</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetMultitype(tMultitype object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>composingtype</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>composingtype</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecomposingtype(composingtype object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>cIntchannel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>cIntchannel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecIntchannel(cIntchannel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>cExtchannel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>cExtchannel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecExtchannel(cExtchannel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>vVariable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>vVariable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casevVariable(vVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //XDstmdataSwitch
